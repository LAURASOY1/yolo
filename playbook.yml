---
- name: Deploy e-commerce application
  hosts: all
  become: true
  vars_files:
    - vars/main.yml
  
  pre_tasks:
    # Use raw commands to bypass apt module completely
    - name: Update packages and install requirements
      raw: >
        export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 &&
        export DEBIAN_FRONTEND=noninteractive &&
        apt-get -o Dpkg::Options::="--force-confold" -o APT::Update::Post-Invoke-Success="" update &&
        apt-get -o Dpkg::Options::="--force-confold" -y install git docker.io docker-compose python3-pip nodejs npm
      ignore_errors: yes
    
    - name: Ensure Docker service is started
      raw: systemctl start docker && systemctl enable docker
      ignore_errors: yes
    
    - name: Install Docker Python module
      raw: pip3 install docker
      ignore_errors: yes
    
    - name: Create application directory
      raw: mkdir -p {{ app_path }} && chmod 755 {{ app_path }}
      ignore_errors: yes
    
    - name: Clone repository if specified
      raw: "[ ! -z '{{ app_repo }}' ] && ([ ! -d {{ app_path }}/.git ] && git clone {{ app_repo }} {{ app_path }} -b {{ app_branch }} || (cd {{ app_path }} && git pull))"
      ignore_errors: yes
      when: app_repo != ""

  roles:
    - role: setup-mongodb
    - role: backend-deployment
    - role: frontend-deployment
  
  post_tasks:
    - name: Check backend accessibility
      raw: "curl -s -o /dev/null -w '%{http_code}' http://localhost:{{ backend_port }}/api/products || echo 'Failed'"
      register: backend_status
      ignore_errors: true
    
    - name: Check frontend accessibility
      raw: "curl -s -o /dev/null -w '%{http_code}' http://localhost:{{ frontend_port }} || echo 'Failed'"
      register: frontend_status
      ignore_errors: true
    
    - name: Show application URLs
      debug:
        msg: |
          Backend API is running at http://localhost:{{ backend_port }} (Status: {{ backend_status.stdout | default('Unknown') }})
          Frontend is running at http://localhost:{{ frontend_port }} (Status: {{ frontend_status.stdout | default('Unknown') }})